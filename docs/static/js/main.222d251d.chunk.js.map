{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","gif","id","title","url","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLA6BeA,EA1BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAUA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,a,+BCnB3CG,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,4DACL,mCADK,SAEAC,MAAM,0CAAD,OAA2CC,UAAUH,GAArD,oBADV,mCACU,cAFL,cAEbI,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,UAAUF,QAThB,kBAadL,GAbc,4CAAH,sDCWLQ,EATK,SAAC,GAAqB,EAApBL,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC7B,OACI,sBAAKI,UAAU,2BAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCoBDQ,EAtBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEd,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BoB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAX,GACFS,EAAS,CACLhB,KAAMO,EACNO,SAAS,SAGtB,CAACpB,IAEGqB,EDbwBI,CAAazB,GAAhCa,EAAZ,EAAOP,KAAac,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,yBAAd,SAAwChB,IACvCoB,GAAW,4CACX,qBAAKJ,UAAU,YAAf,SAEWH,EAAOL,KAAI,SAAAkB,GAAK,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAMhB,aEW5BiB,EAvBM,WACjB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGQ2C,EAAWpB,KAAI,SAAAR,GAAQ,OAClB,cAAC,EAAD,CAEGA,SAAUA,GADLA,U,MCVjC6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.222d251d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type='text' \r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","export const getGifs = async(category) => {\r\n    const token = 'z00c0wJiES8r95HDCNYHXZ8fzTCANCRQ';\r\n    const resp = await fetch(`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=${token}&limit=10`);\r\n    const {data} = await resp.json();\r\n\r\n   const gifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized.url\r\n        }\r\n   });\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {    \r\n    return (\r\n        <div className=\"card animate__fadeInDown\">\r\n            <img src={url} alt={title} />   \r\n            <p>{title}</p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__fadeInDownBig\">{category}</h3>\r\n            {loading && <p>Cargando...</p>}\r\n            {<div className=\"card-grid\">\r\n                    {\r\n                        images.map(image => (\r\n                            <GifGridItem \r\n                                key={image.id}\r\n                                {...image} \r\n                            />\r\n                        ))\r\n                    }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(images => {\r\n                setState({\r\n                    data: images,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n         \r\n                {\r\n                    categories.map(category => \r\n                        (<GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                        )\r\n                    )\r\n                }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}